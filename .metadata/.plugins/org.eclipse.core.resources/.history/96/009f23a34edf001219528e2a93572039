package screens;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

public class MenuScreen implements Screen {
	private OrthographicCamera camera;
	private SpriteBatch batch;
	private Texture texture;
	private Sprite sprite, playButton, instructionButton, creditsButton;
	
	@Override
	public void show() {
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();
		
		camera = new OrthographicCamera(1, h/w);
		batch = new SpriteBatch();
		
		// background    ----  Don't forget to add sprite to draw batch when done  ***AND ALSO DISPOSE***
		texture = new Texture(Gdx.files.internal("data/splash.png"));
		texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		
		TextureRegion region = new TextureRegion(texture, 0, 0, 800, 480);
		
		sprite = new Sprite(region);
		sprite.setSize(1f, 1f * sprite.getHeight() / sprite.getWidth());
		sprite.setOrigin(sprite.getWidth()/2, sprite.getHeight()/2);
		sprite.setPosition(-sprite.getWidth()/2, -sprite.getHeight()/2);
		
		texture = new Texture(Gdx.files.internal("data/playButton.png"));
		texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		
		region = new TextureRegion(texture, 0, 0, 256, 64);
		
		playButton = new Sprite(region);
		playButton.setSize(1f, 1f * playButton.getHeight() / playButton.getWidth());
		playButton.setOrigin(playButton.getWidth()/2, playButton.getHeight()/2);
		playButton.setPosition(.2f, -.08f);
		
		texture = new Texture(Gdx.files.internal("data/instructionButton.png"));
		texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		
		region = new TextureRegion(texture, 0, 0, 256, 64);
		
		instructionButton = new Sprite(region);
		instructionButton.setSize(1f, 1f * instructionButton.getHeight() / instructionButton.getWidth());
		instructionButton.setOrigin(instructionButton.getWidth()/2, instructionButton.getHeight()/2);
		instructionButton.setPosition(.15f, -.14f);
		
		texture = new Texture(Gdx.files.internal("data/creditsButton.png"));
		texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);
		
		region = new TextureRegion(texture, 0, 0, 256, 64);
		
		creditsButton = new Sprite(region);
		creditsButton.setSize(1f, 1f * creditsButton.getHeight() / creditsButton.getWidth());
		creditsButton.setOrigin(creditsButton.getWidth()/2, creditsButton.getHeight()/2);
		creditsButton.setPosition(.1f, -.2f);
		
	}
	
	@Override
	public void render(float delta) {
		Gdx.gl.glClearColor(0, 0, 0, 1);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);

		batch.setProjectionMatrix(camera.combined);
		batch.begin();
		sprite.draw(batch);
		
		batch.end();	
	}

	@Override
	public void dispose() {
		batch.dispose();
		texture.dispose();
	}
	
	@Override
	public void resize(int width, int height) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void hide() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void pause() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void resume() {
		// TODO Auto-generated method stub
		
	}
}
