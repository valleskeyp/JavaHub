package com.valleskeyp.tubehub;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import com.valleskeyp.tubehub.MainActivity.ResponseReceiver;

import android.app.IntentService;
import android.content.Intent;
import android.util.Log;

public class YouTubeService extends IntentService {
	public static final String PARAM_IN_MSG = "imsg";
	public static final String PARAM_OUT_MSG = "omsg";


	public YouTubeService() {
		super("YouTubeService");
	}

	@Override
	protected void onHandleIntent(Intent intent) {
		String refresh_token = intent.getStringExtra(PARAM_IN_MSG);

		HttpClient httpClient = new DefaultHttpClient();

		HttpPost httpPost = new HttpPost("https://accounts.google.com/o/oauth2/token");

		BasicNameValuePair codeBasicNameValuePair = new BasicNameValuePair("refresh_token", refresh_token);
		BasicNameValuePair idBasicNameValuePair = new BasicNameValuePair("client_id", "799487565850.apps.googleusercontent.com");
		BasicNameValuePair secretBasicNameValuePair = new BasicNameValuePair("client_secret", "68-Az4WTeSS0YYv5we5iomd1");
		BasicNameValuePair grantBasicNameValuePair = new BasicNameValuePair("grant_type", "refresh_token");

		List<NameValuePair> nameValuePairList = new ArrayList<NameValuePair>();
		nameValuePairList.add(codeBasicNameValuePair);
		nameValuePairList.add(idBasicNameValuePair);
		nameValuePairList.add(grantBasicNameValuePair);
		nameValuePairList.add(secretBasicNameValuePair);

		String access_token = null;
		try { 
			UrlEncodedFormEntity urlEncodedFormEntity = new UrlEncodedFormEntity(nameValuePairList);
			httpPost.setEntity(urlEncodedFormEntity);
			try {
				HttpResponse httpResponse = httpClient.execute(httpPost);
				InputStream inputStream = httpResponse.getEntity().getContent();
				InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
				BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
				StringBuilder stringBuilder = new StringBuilder();
				String bufferedStrChunk = null;
				while((bufferedStrChunk = bufferedReader.readLine()) != null){
					stringBuilder.append(bufferedStrChunk);
				}

				access_token = stringBuilder.toString();
				Log.i("FIRST_HTTP_POST", access_token);
			} catch (ClientProtocolException cpe) {
				System.out.println("First Exception cause of HttpResponese :" + cpe);
				cpe.printStackTrace();
			} catch (IOException ioe) {
				System.out.println("Second Exception cause of HttpResponse :" + ioe);
				ioe.printStackTrace();
			}

		} catch (UnsupportedEncodingException uee) {
			System.out.println("An Exception given because of UrlEncodedFormEntity argument :" + uee);
			uee.printStackTrace();
		}
		nameValuePairList = null;
		if (access_token != null) {
			try {
				JSONObject json = new JSONObject(access_token);
				String accessToken = json.getString("access_token");

				httpClient = new DefaultHttpClient();

				httpPost = new HttpPost("https://www.googleapis.com/youtube/v3/playlistItems?access_token=" + accessToken);

				String youTubeData = null;
				try {
					HttpResponse httpResponse = httpClient.execute(httpPost);
					InputStream inputStream = httpResponse.getEntity().getContent();
					InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
					BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
					StringBuilder stringBuilder = new StringBuilder();
					String bufferedStrChunk = null;
					while((bufferedStrChunk = bufferedReader.readLine()) != null) {
						stringBuilder.append(bufferedStrChunk);
					}
					youTubeData = stringBuilder.toString();

				} catch (ClientProtocolException cpe) {
					System.out.println("First Exception cause of HttpResponese :" + cpe);
					cpe.printStackTrace();
				} catch (IOException ioe) {
					System.out.println("Second Exception cause of HttpResponse :" + ioe);
					ioe.printStackTrace();
				}


				if (youTubeData != null) {
					Log.i("SECOND_HTTP_POST", youTubeData);

					Intent broadcastIntent = new Intent();
					broadcastIntent.setAction(ResponseReceiver.ACTION_RESPONSE);
					broadcastIntent.addCategory(Intent.CATEGORY_DEFAULT);
					broadcastIntent.putExtra(PARAM_OUT_MSG, youTubeData);
					sendBroadcast(broadcastIntent);

				}
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}

	}

}
